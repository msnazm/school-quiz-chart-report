#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectronicSchoolSql.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Data")]
	public partial class DataSetLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_book(tbl_book instance);
    partial void Updatetbl_book(tbl_book instance);
    partial void Deletetbl_book(tbl_book instance);
    partial void Inserttbl_lesson(tbl_lesson instance);
    partial void Updatetbl_lesson(tbl_lesson instance);
    partial void Deletetbl_lesson(tbl_lesson instance);
    partial void Inserttbl_main(tbl_main instance);
    partial void Updatetbl_main(tbl_main instance);
    partial void Deletetbl_main(tbl_main instance);
    partial void Inserttbl_question(tbl_question instance);
    partial void Updatetbl_question(tbl_question instance);
    partial void Deletetbl_question(tbl_question instance);
    partial void Inserttbl_quiz(tbl_quiz instance);
    partial void Updatetbl_quiz(tbl_quiz instance);
    partial void Deletetbl_quiz(tbl_quiz instance);
    partial void Inserttbl_result(tbl_result instance);
    partial void Updatetbl_result(tbl_result instance);
    partial void Deletetbl_result(tbl_result instance);
    #endregion
		
		public DataSetLinqDataContext() : 
				base(global::ElectronicSchoolSql.Properties.Settings.Default.DataConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataSetLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSetLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSetLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSetLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_book> tbl_books
		{
			get
			{
				return this.GetTable<tbl_book>();
			}
		}
		
		public System.Data.Linq.Table<tbl_lesson> tbl_lessons
		{
			get
			{
				return this.GetTable<tbl_lesson>();
			}
		}
		
		public System.Data.Linq.Table<tbl_main> tbl_mains
		{
			get
			{
				return this.GetTable<tbl_main>();
			}
		}
		
		public System.Data.Linq.Table<tbl_question> tbl_questions
		{
			get
			{
				return this.GetTable<tbl_question>();
			}
		}
		
		public System.Data.Linq.Table<tbl_quiz> tbl_quizs
		{
			get
			{
				return this.GetTable<tbl_quiz>();
			}
		}
		
		public System.Data.Linq.Table<tbl_result> tbl_results
		{
			get
			{
				return this.GetTable<tbl_result>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_book")]
	public partial class tbl_book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Book;
		
		private string _name_book;
		
		private System.Nullable<int> _Id_Quiz;
		
		private EntitySet<tbl_lesson> _tbl_lessons;
		
		private EntitySet<tbl_main> _tbl_mains;
		
		private EntitySet<tbl_result> _tbl_results;
		
		private EntityRef<tbl_quiz> _tbl_quiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_BookChanging(int value);
    partial void OnId_BookChanged();
    partial void Onname_bookChanging(string value);
    partial void Onname_bookChanged();
    partial void OnId_QuizChanging(System.Nullable<int> value);
    partial void OnId_QuizChanged();
    #endregion
		
		public tbl_book()
		{
			this._tbl_lessons = new EntitySet<tbl_lesson>(new Action<tbl_lesson>(this.attach_tbl_lessons), new Action<tbl_lesson>(this.detach_tbl_lessons));
			this._tbl_mains = new EntitySet<tbl_main>(new Action<tbl_main>(this.attach_tbl_mains), new Action<tbl_main>(this.detach_tbl_mains));
			this._tbl_results = new EntitySet<tbl_result>(new Action<tbl_result>(this.attach_tbl_results), new Action<tbl_result>(this.detach_tbl_results));
			this._tbl_quiz = default(EntityRef<tbl_quiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Book", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Book
		{
			get
			{
				return this._Id_Book;
			}
			set
			{
				if ((this._Id_Book != value))
				{
					this.OnId_BookChanging(value);
					this.SendPropertyChanging();
					this._Id_Book = value;
					this.SendPropertyChanged("Id_Book");
					this.OnId_BookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_book", DbType="NVarChar(300)")]
		public string name_book
		{
			get
			{
				return this._name_book;
			}
			set
			{
				if ((this._name_book != value))
				{
					this.Onname_bookChanging(value);
					this.SendPropertyChanging();
					this._name_book = value;
					this.SendPropertyChanged("name_book");
					this.Onname_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Quiz", DbType="Int")]
		public System.Nullable<int> Id_Quiz
		{
			get
			{
				return this._Id_Quiz;
			}
			set
			{
				if ((this._Id_Quiz != value))
				{
					if (this._tbl_quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_QuizChanging(value);
					this.SendPropertyChanging();
					this._Id_Quiz = value;
					this.SendPropertyChanged("Id_Quiz");
					this.OnId_QuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_book_tbl_lesson", Storage="_tbl_lessons", ThisKey="Id_Book", OtherKey="Id_Book")]
		public EntitySet<tbl_lesson> tbl_lessons
		{
			get
			{
				return this._tbl_lessons;
			}
			set
			{
				this._tbl_lessons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_book_tbl_main", Storage="_tbl_mains", ThisKey="Id_Book", OtherKey="id_book")]
		public EntitySet<tbl_main> tbl_mains
		{
			get
			{
				return this._tbl_mains;
			}
			set
			{
				this._tbl_mains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_book_tbl_result", Storage="_tbl_results", ThisKey="Id_Book", OtherKey="Id_Book")]
		public EntitySet<tbl_result> tbl_results
		{
			get
			{
				return this._tbl_results;
			}
			set
			{
				this._tbl_results.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_quiz_tbl_book", Storage="_tbl_quiz", ThisKey="Id_Quiz", OtherKey="Id_Quiz", IsForeignKey=true)]
		public tbl_quiz tbl_quiz
		{
			get
			{
				return this._tbl_quiz.Entity;
			}
			set
			{
				tbl_quiz previousValue = this._tbl_quiz.Entity;
				if (((previousValue != value) 
							|| (this._tbl_quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_quiz.Entity = null;
						previousValue.tbl_books.Remove(this);
					}
					this._tbl_quiz.Entity = value;
					if ((value != null))
					{
						value.tbl_books.Add(this);
						this._Id_Quiz = value.Id_Quiz;
					}
					else
					{
						this._Id_Quiz = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_quiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_lessons(tbl_lesson entity)
		{
			this.SendPropertyChanging();
			entity.tbl_book = this;
		}
		
		private void detach_tbl_lessons(tbl_lesson entity)
		{
			this.SendPropertyChanging();
			entity.tbl_book = null;
		}
		
		private void attach_tbl_mains(tbl_main entity)
		{
			this.SendPropertyChanging();
			entity.tbl_book = this;
		}
		
		private void detach_tbl_mains(tbl_main entity)
		{
			this.SendPropertyChanging();
			entity.tbl_book = null;
		}
		
		private void attach_tbl_results(tbl_result entity)
		{
			this.SendPropertyChanging();
			entity.tbl_book = this;
		}
		
		private void detach_tbl_results(tbl_result entity)
		{
			this.SendPropertyChanging();
			entity.tbl_book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_lesson")]
	public partial class tbl_lesson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_lesson;
		
		private string _name_lesson;
		
		private System.Nullable<int> _Id_Book;
		
		private EntitySet<tbl_main> _tbl_mains;
		
		private EntitySet<tbl_result> _tbl_results;
		
		private EntityRef<tbl_book> _tbl_book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_lessonChanging(int value);
    partial void Onid_lessonChanged();
    partial void Onname_lessonChanging(string value);
    partial void Onname_lessonChanged();
    partial void OnId_BookChanging(System.Nullable<int> value);
    partial void OnId_BookChanged();
    #endregion
		
		public tbl_lesson()
		{
			this._tbl_mains = new EntitySet<tbl_main>(new Action<tbl_main>(this.attach_tbl_mains), new Action<tbl_main>(this.detach_tbl_mains));
			this._tbl_results = new EntitySet<tbl_result>(new Action<tbl_result>(this.attach_tbl_results), new Action<tbl_result>(this.detach_tbl_results));
			this._tbl_book = default(EntityRef<tbl_book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lesson", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_lesson
		{
			get
			{
				return this._id_lesson;
			}
			set
			{
				if ((this._id_lesson != value))
				{
					this.Onid_lessonChanging(value);
					this.SendPropertyChanging();
					this._id_lesson = value;
					this.SendPropertyChanged("id_lesson");
					this.Onid_lessonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_lesson", DbType="NVarChar(300)")]
		public string name_lesson
		{
			get
			{
				return this._name_lesson;
			}
			set
			{
				if ((this._name_lesson != value))
				{
					this.Onname_lessonChanging(value);
					this.SendPropertyChanging();
					this._name_lesson = value;
					this.SendPropertyChanged("name_lesson");
					this.Onname_lessonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Book", DbType="Int")]
		public System.Nullable<int> Id_Book
		{
			get
			{
				return this._Id_Book;
			}
			set
			{
				if ((this._Id_Book != value))
				{
					if (this._tbl_book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BookChanging(value);
					this.SendPropertyChanging();
					this._Id_Book = value;
					this.SendPropertyChanged("Id_Book");
					this.OnId_BookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_lesson_tbl_main", Storage="_tbl_mains", ThisKey="id_lesson", OtherKey="id_lesson")]
		public EntitySet<tbl_main> tbl_mains
		{
			get
			{
				return this._tbl_mains;
			}
			set
			{
				this._tbl_mains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_lesson_tbl_result", Storage="_tbl_results", ThisKey="id_lesson", OtherKey="id_lesson")]
		public EntitySet<tbl_result> tbl_results
		{
			get
			{
				return this._tbl_results;
			}
			set
			{
				this._tbl_results.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_book_tbl_lesson", Storage="_tbl_book", ThisKey="Id_Book", OtherKey="Id_Book", IsForeignKey=true)]
		public tbl_book tbl_book
		{
			get
			{
				return this._tbl_book.Entity;
			}
			set
			{
				tbl_book previousValue = this._tbl_book.Entity;
				if (((previousValue != value) 
							|| (this._tbl_book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_book.Entity = null;
						previousValue.tbl_lessons.Remove(this);
					}
					this._tbl_book.Entity = value;
					if ((value != null))
					{
						value.tbl_lessons.Add(this);
						this._Id_Book = value.Id_Book;
					}
					else
					{
						this._Id_Book = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_mains(tbl_main entity)
		{
			this.SendPropertyChanging();
			entity.tbl_lesson = this;
		}
		
		private void detach_tbl_mains(tbl_main entity)
		{
			this.SendPropertyChanging();
			entity.tbl_lesson = null;
		}
		
		private void attach_tbl_results(tbl_result entity)
		{
			this.SendPropertyChanging();
			entity.tbl_lesson = this;
		}
		
		private void detach_tbl_results(tbl_result entity)
		{
			this.SendPropertyChanging();
			entity.tbl_lesson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_main")]
	public partial class tbl_main : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_main;
		
		private string _date_main;
		
		private System.Nullable<int> _id_quiz;
		
		private System.Nullable<int> _id_book;
		
		private System.Nullable<int> _id_lesson;
		
		private EntitySet<tbl_question> _tbl_questions;
		
		private EntityRef<tbl_book> _tbl_book;
		
		private EntityRef<tbl_lesson> _tbl_lesson;
		
		private EntityRef<tbl_quiz> _tbl_quiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_mainChanging(int value);
    partial void Onid_mainChanged();
    partial void Ondate_mainChanging(string value);
    partial void Ondate_mainChanged();
    partial void Onid_quizChanging(System.Nullable<int> value);
    partial void Onid_quizChanged();
    partial void Onid_bookChanging(System.Nullable<int> value);
    partial void Onid_bookChanged();
    partial void Onid_lessonChanging(System.Nullable<int> value);
    partial void Onid_lessonChanged();
    #endregion
		
		public tbl_main()
		{
			this._tbl_questions = new EntitySet<tbl_question>(new Action<tbl_question>(this.attach_tbl_questions), new Action<tbl_question>(this.detach_tbl_questions));
			this._tbl_book = default(EntityRef<tbl_book>);
			this._tbl_lesson = default(EntityRef<tbl_lesson>);
			this._tbl_quiz = default(EntityRef<tbl_quiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_main", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_main
		{
			get
			{
				return this._id_main;
			}
			set
			{
				if ((this._id_main != value))
				{
					this.Onid_mainChanging(value);
					this.SendPropertyChanging();
					this._id_main = value;
					this.SendPropertyChanged("id_main");
					this.Onid_mainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_main", DbType="NVarChar(50)")]
		public string date_main
		{
			get
			{
				return this._date_main;
			}
			set
			{
				if ((this._date_main != value))
				{
					this.Ondate_mainChanging(value);
					this.SendPropertyChanging();
					this._date_main = value;
					this.SendPropertyChanged("date_main");
					this.Ondate_mainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_quiz", DbType="Int")]
		public System.Nullable<int> id_quiz
		{
			get
			{
				return this._id_quiz;
			}
			set
			{
				if ((this._id_quiz != value))
				{
					if (this._tbl_quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_quizChanging(value);
					this.SendPropertyChanging();
					this._id_quiz = value;
					this.SendPropertyChanged("id_quiz");
					this.Onid_quizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_book", DbType="Int")]
		public System.Nullable<int> id_book
		{
			get
			{
				return this._id_book;
			}
			set
			{
				if ((this._id_book != value))
				{
					if (this._tbl_book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bookChanging(value);
					this.SendPropertyChanging();
					this._id_book = value;
					this.SendPropertyChanged("id_book");
					this.Onid_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lesson", DbType="Int")]
		public System.Nullable<int> id_lesson
		{
			get
			{
				return this._id_lesson;
			}
			set
			{
				if ((this._id_lesson != value))
				{
					if (this._tbl_lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lessonChanging(value);
					this.SendPropertyChanging();
					this._id_lesson = value;
					this.SendPropertyChanged("id_lesson");
					this.Onid_lessonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_main_tbl_question", Storage="_tbl_questions", ThisKey="id_main", OtherKey="id_main")]
		public EntitySet<tbl_question> tbl_questions
		{
			get
			{
				return this._tbl_questions;
			}
			set
			{
				this._tbl_questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_book_tbl_main", Storage="_tbl_book", ThisKey="id_book", OtherKey="Id_Book", IsForeignKey=true)]
		public tbl_book tbl_book
		{
			get
			{
				return this._tbl_book.Entity;
			}
			set
			{
				tbl_book previousValue = this._tbl_book.Entity;
				if (((previousValue != value) 
							|| (this._tbl_book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_book.Entity = null;
						previousValue.tbl_mains.Remove(this);
					}
					this._tbl_book.Entity = value;
					if ((value != null))
					{
						value.tbl_mains.Add(this);
						this._id_book = value.Id_Book;
					}
					else
					{
						this._id_book = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_lesson_tbl_main", Storage="_tbl_lesson", ThisKey="id_lesson", OtherKey="id_lesson", IsForeignKey=true)]
		public tbl_lesson tbl_lesson
		{
			get
			{
				return this._tbl_lesson.Entity;
			}
			set
			{
				tbl_lesson previousValue = this._tbl_lesson.Entity;
				if (((previousValue != value) 
							|| (this._tbl_lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_lesson.Entity = null;
						previousValue.tbl_mains.Remove(this);
					}
					this._tbl_lesson.Entity = value;
					if ((value != null))
					{
						value.tbl_mains.Add(this);
						this._id_lesson = value.id_lesson;
					}
					else
					{
						this._id_lesson = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_quiz_tbl_main", Storage="_tbl_quiz", ThisKey="id_quiz", OtherKey="Id_Quiz", IsForeignKey=true)]
		public tbl_quiz tbl_quiz
		{
			get
			{
				return this._tbl_quiz.Entity;
			}
			set
			{
				tbl_quiz previousValue = this._tbl_quiz.Entity;
				if (((previousValue != value) 
							|| (this._tbl_quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_quiz.Entity = null;
						previousValue.tbl_mains.Remove(this);
					}
					this._tbl_quiz.Entity = value;
					if ((value != null))
					{
						value.tbl_mains.Add(this);
						this._id_quiz = value.Id_Quiz;
					}
					else
					{
						this._id_quiz = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_quiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_questions(tbl_question entity)
		{
			this.SendPropertyChanging();
			entity.tbl_main = this;
		}
		
		private void detach_tbl_questions(tbl_question entity)
		{
			this.SendPropertyChanging();
			entity.tbl_main = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_question")]
	public partial class tbl_question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Question;
		
		private string _question;
		
		private string _answerone;
		
		private string _answertwo;
		
		private string _answerthree;
		
		private string _answerfure;
		
		private System.Nullable<int> _answer;
		
		private System.Nullable<int> _id_main;
		
		private int _testcorect;
		
		private System.Nullable<int> _resultCorrect;
		
		private System.Nullable<int> _resultInCorrect;
		
		private System.Nullable<int> _num;
		
		private EntityRef<tbl_main> _tbl_main;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_QuestionChanging(int value);
    partial void OnId_QuestionChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnansweroneChanging(string value);
    partial void OnansweroneChanged();
    partial void OnanswertwoChanging(string value);
    partial void OnanswertwoChanged();
    partial void OnanswerthreeChanging(string value);
    partial void OnanswerthreeChanged();
    partial void OnanswerfureChanging(string value);
    partial void OnanswerfureChanged();
    partial void OnanswerChanging(System.Nullable<int> value);
    partial void OnanswerChanged();
    partial void Onid_mainChanging(System.Nullable<int> value);
    partial void Onid_mainChanged();
    partial void OntestcorectChanging(int value);
    partial void OntestcorectChanged();
    partial void OnresultCorrectChanging(System.Nullable<int> value);
    partial void OnresultCorrectChanged();
    partial void OnresultInCorrectChanging(System.Nullable<int> value);
    partial void OnresultInCorrectChanged();
    partial void OnnumChanging(System.Nullable<int> value);
    partial void OnnumChanged();
    #endregion
		
		public tbl_question()
		{
			this._tbl_main = default(EntityRef<tbl_main>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Question", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Question
		{
			get
			{
				return this._Id_Question;
			}
			set
			{
				if ((this._Id_Question != value))
				{
					this.OnId_QuestionChanging(value);
					this.SendPropertyChanging();
					this._Id_Question = value;
					this.SendPropertyChanged("Id_Question");
					this.OnId_QuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(300)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerone", DbType="NVarChar(200)")]
		public string answerone
		{
			get
			{
				return this._answerone;
			}
			set
			{
				if ((this._answerone != value))
				{
					this.OnansweroneChanging(value);
					this.SendPropertyChanging();
					this._answerone = value;
					this.SendPropertyChanged("answerone");
					this.OnansweroneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answertwo", DbType="NVarChar(200)")]
		public string answertwo
		{
			get
			{
				return this._answertwo;
			}
			set
			{
				if ((this._answertwo != value))
				{
					this.OnanswertwoChanging(value);
					this.SendPropertyChanging();
					this._answertwo = value;
					this.SendPropertyChanged("answertwo");
					this.OnanswertwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerthree", DbType="NVarChar(200)")]
		public string answerthree
		{
			get
			{
				return this._answerthree;
			}
			set
			{
				if ((this._answerthree != value))
				{
					this.OnanswerthreeChanging(value);
					this.SendPropertyChanging();
					this._answerthree = value;
					this.SendPropertyChanged("answerthree");
					this.OnanswerthreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerfure", DbType="NVarChar(200)")]
		public string answerfure
		{
			get
			{
				return this._answerfure;
			}
			set
			{
				if ((this._answerfure != value))
				{
					this.OnanswerfureChanging(value);
					this.SendPropertyChanging();
					this._answerfure = value;
					this.SendPropertyChanged("answerfure");
					this.OnanswerfureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="Int")]
		public System.Nullable<int> answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_main", DbType="Int")]
		public System.Nullable<int> id_main
		{
			get
			{
				return this._id_main;
			}
			set
			{
				if ((this._id_main != value))
				{
					if (this._tbl_main.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_mainChanging(value);
					this.SendPropertyChanging();
					this._id_main = value;
					this.SendPropertyChanged("id_main");
					this.Onid_mainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testcorect", DbType="Int NOT NULL")]
		public int testcorect
		{
			get
			{
				return this._testcorect;
			}
			set
			{
				if ((this._testcorect != value))
				{
					this.OntestcorectChanging(value);
					this.SendPropertyChanging();
					this._testcorect = value;
					this.SendPropertyChanged("testcorect");
					this.OntestcorectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultCorrect", DbType="Int")]
		public System.Nullable<int> resultCorrect
		{
			get
			{
				return this._resultCorrect;
			}
			set
			{
				if ((this._resultCorrect != value))
				{
					this.OnresultCorrectChanging(value);
					this.SendPropertyChanging();
					this._resultCorrect = value;
					this.SendPropertyChanged("resultCorrect");
					this.OnresultCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultInCorrect", DbType="Int")]
		public System.Nullable<int> resultInCorrect
		{
			get
			{
				return this._resultInCorrect;
			}
			set
			{
				if ((this._resultInCorrect != value))
				{
					this.OnresultInCorrectChanging(value);
					this.SendPropertyChanging();
					this._resultInCorrect = value;
					this.SendPropertyChanged("resultInCorrect");
					this.OnresultInCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this.OnnumChanging(value);
					this.SendPropertyChanging();
					this._num = value;
					this.SendPropertyChanged("num");
					this.OnnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_main_tbl_question", Storage="_tbl_main", ThisKey="id_main", OtherKey="id_main", IsForeignKey=true)]
		public tbl_main tbl_main
		{
			get
			{
				return this._tbl_main.Entity;
			}
			set
			{
				tbl_main previousValue = this._tbl_main.Entity;
				if (((previousValue != value) 
							|| (this._tbl_main.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_main.Entity = null;
						previousValue.tbl_questions.Remove(this);
					}
					this._tbl_main.Entity = value;
					if ((value != null))
					{
						value.tbl_questions.Add(this);
						this._id_main = value.id_main;
					}
					else
					{
						this._id_main = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_main");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_quiz")]
	public partial class tbl_quiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Quiz;
		
		private string _name_quiz;
		
		private string _date_quiz;
		
		private EntitySet<tbl_book> _tbl_books;
		
		private EntitySet<tbl_main> _tbl_mains;
		
		private EntitySet<tbl_result> _tbl_results;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_QuizChanging(int value);
    partial void OnId_QuizChanged();
    partial void Onname_quizChanging(string value);
    partial void Onname_quizChanged();
    partial void Ondate_quizChanging(string value);
    partial void Ondate_quizChanged();
    #endregion
		
		public tbl_quiz()
		{
			this._tbl_books = new EntitySet<tbl_book>(new Action<tbl_book>(this.attach_tbl_books), new Action<tbl_book>(this.detach_tbl_books));
			this._tbl_mains = new EntitySet<tbl_main>(new Action<tbl_main>(this.attach_tbl_mains), new Action<tbl_main>(this.detach_tbl_mains));
			this._tbl_results = new EntitySet<tbl_result>(new Action<tbl_result>(this.attach_tbl_results), new Action<tbl_result>(this.detach_tbl_results));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Quiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Quiz
		{
			get
			{
				return this._Id_Quiz;
			}
			set
			{
				if ((this._Id_Quiz != value))
				{
					this.OnId_QuizChanging(value);
					this.SendPropertyChanging();
					this._Id_Quiz = value;
					this.SendPropertyChanged("Id_Quiz");
					this.OnId_QuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_quiz", DbType="NVarChar(150)")]
		public string name_quiz
		{
			get
			{
				return this._name_quiz;
			}
			set
			{
				if ((this._name_quiz != value))
				{
					this.Onname_quizChanging(value);
					this.SendPropertyChanging();
					this._name_quiz = value;
					this.SendPropertyChanged("name_quiz");
					this.Onname_quizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_quiz", DbType="NVarChar(50)")]
		public string date_quiz
		{
			get
			{
				return this._date_quiz;
			}
			set
			{
				if ((this._date_quiz != value))
				{
					this.Ondate_quizChanging(value);
					this.SendPropertyChanging();
					this._date_quiz = value;
					this.SendPropertyChanged("date_quiz");
					this.Ondate_quizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_quiz_tbl_book", Storage="_tbl_books", ThisKey="Id_Quiz", OtherKey="Id_Quiz")]
		public EntitySet<tbl_book> tbl_books
		{
			get
			{
				return this._tbl_books;
			}
			set
			{
				this._tbl_books.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_quiz_tbl_main", Storage="_tbl_mains", ThisKey="Id_Quiz", OtherKey="id_quiz")]
		public EntitySet<tbl_main> tbl_mains
		{
			get
			{
				return this._tbl_mains;
			}
			set
			{
				this._tbl_mains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_quiz_tbl_result", Storage="_tbl_results", ThisKey="Id_Quiz", OtherKey="Id_Quiz")]
		public EntitySet<tbl_result> tbl_results
		{
			get
			{
				return this._tbl_results;
			}
			set
			{
				this._tbl_results.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_books(tbl_book entity)
		{
			this.SendPropertyChanging();
			entity.tbl_quiz = this;
		}
		
		private void detach_tbl_books(tbl_book entity)
		{
			this.SendPropertyChanging();
			entity.tbl_quiz = null;
		}
		
		private void attach_tbl_mains(tbl_main entity)
		{
			this.SendPropertyChanging();
			entity.tbl_quiz = this;
		}
		
		private void detach_tbl_mains(tbl_main entity)
		{
			this.SendPropertyChanging();
			entity.tbl_quiz = null;
		}
		
		private void attach_tbl_results(tbl_result entity)
		{
			this.SendPropertyChanging();
			entity.tbl_quiz = this;
		}
		
		private void detach_tbl_results(tbl_result entity)
		{
			this.SendPropertyChanging();
			entity.tbl_quiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_result")]
	public partial class tbl_result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Result;
		
		private System.Nullable<int> _Points_Correct;
		
		private System.Nullable<int> _Points_InCorrect;
		
		private System.Nullable<int> _Competency;
		
		private System.Nullable<int> _Time_Result;
		
		private System.Nullable<int> _Id_Quiz;
		
		private System.Nullable<int> _Id_Book;
		
		private System.Nullable<int> _id_lesson;
		
		private string _date_t;
		
		private EntityRef<tbl_book> _tbl_book;
		
		private EntityRef<tbl_lesson> _tbl_lesson;
		
		private EntityRef<tbl_quiz> _tbl_quiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ResultChanging(int value);
    partial void OnId_ResultChanged();
    partial void OnPoints_CorrectChanging(System.Nullable<int> value);
    partial void OnPoints_CorrectChanged();
    partial void OnPoints_InCorrectChanging(System.Nullable<int> value);
    partial void OnPoints_InCorrectChanged();
    partial void OnCompetencyChanging(System.Nullable<int> value);
    partial void OnCompetencyChanged();
    partial void OnTime_ResultChanging(System.Nullable<int> value);
    partial void OnTime_ResultChanged();
    partial void OnId_QuizChanging(System.Nullable<int> value);
    partial void OnId_QuizChanged();
    partial void OnId_BookChanging(System.Nullable<int> value);
    partial void OnId_BookChanged();
    partial void Onid_lessonChanging(System.Nullable<int> value);
    partial void Onid_lessonChanged();
    partial void Ondate_tChanging(string value);
    partial void Ondate_tChanged();
    #endregion
		
		public tbl_result()
		{
			this._tbl_book = default(EntityRef<tbl_book>);
			this._tbl_lesson = default(EntityRef<tbl_lesson>);
			this._tbl_quiz = default(EntityRef<tbl_quiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Result", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Result
		{
			get
			{
				return this._Id_Result;
			}
			set
			{
				if ((this._Id_Result != value))
				{
					this.OnId_ResultChanging(value);
					this.SendPropertyChanging();
					this._Id_Result = value;
					this.SendPropertyChanged("Id_Result");
					this.OnId_ResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points_Correct", DbType="Int")]
		public System.Nullable<int> Points_Correct
		{
			get
			{
				return this._Points_Correct;
			}
			set
			{
				if ((this._Points_Correct != value))
				{
					this.OnPoints_CorrectChanging(value);
					this.SendPropertyChanging();
					this._Points_Correct = value;
					this.SendPropertyChanged("Points_Correct");
					this.OnPoints_CorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points_InCorrect", DbType="Int")]
		public System.Nullable<int> Points_InCorrect
		{
			get
			{
				return this._Points_InCorrect;
			}
			set
			{
				if ((this._Points_InCorrect != value))
				{
					this.OnPoints_InCorrectChanging(value);
					this.SendPropertyChanging();
					this._Points_InCorrect = value;
					this.SendPropertyChanged("Points_InCorrect");
					this.OnPoints_InCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Competency", DbType="Int")]
		public System.Nullable<int> Competency
		{
			get
			{
				return this._Competency;
			}
			set
			{
				if ((this._Competency != value))
				{
					this.OnCompetencyChanging(value);
					this.SendPropertyChanging();
					this._Competency = value;
					this.SendPropertyChanged("Competency");
					this.OnCompetencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Result", DbType="Int")]
		public System.Nullable<int> Time_Result
		{
			get
			{
				return this._Time_Result;
			}
			set
			{
				if ((this._Time_Result != value))
				{
					this.OnTime_ResultChanging(value);
					this.SendPropertyChanging();
					this._Time_Result = value;
					this.SendPropertyChanged("Time_Result");
					this.OnTime_ResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Quiz", DbType="Int")]
		public System.Nullable<int> Id_Quiz
		{
			get
			{
				return this._Id_Quiz;
			}
			set
			{
				if ((this._Id_Quiz != value))
				{
					if (this._tbl_quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_QuizChanging(value);
					this.SendPropertyChanging();
					this._Id_Quiz = value;
					this.SendPropertyChanged("Id_Quiz");
					this.OnId_QuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Book", DbType="Int")]
		public System.Nullable<int> Id_Book
		{
			get
			{
				return this._Id_Book;
			}
			set
			{
				if ((this._Id_Book != value))
				{
					if (this._tbl_book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BookChanging(value);
					this.SendPropertyChanging();
					this._Id_Book = value;
					this.SendPropertyChanged("Id_Book");
					this.OnId_BookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lesson", DbType="Int")]
		public System.Nullable<int> id_lesson
		{
			get
			{
				return this._id_lesson;
			}
			set
			{
				if ((this._id_lesson != value))
				{
					if (this._tbl_lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lessonChanging(value);
					this.SendPropertyChanging();
					this._id_lesson = value;
					this.SendPropertyChanged("id_lesson");
					this.Onid_lessonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_t", DbType="NVarChar(10)")]
		public string date_t
		{
			get
			{
				return this._date_t;
			}
			set
			{
				if ((this._date_t != value))
				{
					this.Ondate_tChanging(value);
					this.SendPropertyChanging();
					this._date_t = value;
					this.SendPropertyChanged("date_t");
					this.Ondate_tChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_book_tbl_result", Storage="_tbl_book", ThisKey="Id_Book", OtherKey="Id_Book", IsForeignKey=true)]
		public tbl_book tbl_book
		{
			get
			{
				return this._tbl_book.Entity;
			}
			set
			{
				tbl_book previousValue = this._tbl_book.Entity;
				if (((previousValue != value) 
							|| (this._tbl_book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_book.Entity = null;
						previousValue.tbl_results.Remove(this);
					}
					this._tbl_book.Entity = value;
					if ((value != null))
					{
						value.tbl_results.Add(this);
						this._Id_Book = value.Id_Book;
					}
					else
					{
						this._Id_Book = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_lesson_tbl_result", Storage="_tbl_lesson", ThisKey="id_lesson", OtherKey="id_lesson", IsForeignKey=true)]
		public tbl_lesson tbl_lesson
		{
			get
			{
				return this._tbl_lesson.Entity;
			}
			set
			{
				tbl_lesson previousValue = this._tbl_lesson.Entity;
				if (((previousValue != value) 
							|| (this._tbl_lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_lesson.Entity = null;
						previousValue.tbl_results.Remove(this);
					}
					this._tbl_lesson.Entity = value;
					if ((value != null))
					{
						value.tbl_results.Add(this);
						this._id_lesson = value.id_lesson;
					}
					else
					{
						this._id_lesson = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_quiz_tbl_result", Storage="_tbl_quiz", ThisKey="Id_Quiz", OtherKey="Id_Quiz", IsForeignKey=true)]
		public tbl_quiz tbl_quiz
		{
			get
			{
				return this._tbl_quiz.Entity;
			}
			set
			{
				tbl_quiz previousValue = this._tbl_quiz.Entity;
				if (((previousValue != value) 
							|| (this._tbl_quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_quiz.Entity = null;
						previousValue.tbl_results.Remove(this);
					}
					this._tbl_quiz.Entity = value;
					if ((value != null))
					{
						value.tbl_results.Add(this);
						this._Id_Quiz = value.Id_Quiz;
					}
					else
					{
						this._Id_Quiz = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_quiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
